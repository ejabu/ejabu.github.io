webpackHotUpdate_N_E("pages/index",{

/***/ "./components/tab/roles.js":
/*!*********************************!*\
  !*** ./components/tab/roles.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ "./node_modules/styled-jsx/style.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _layout_content__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout-content */ "./components/tab/layout-content.js");
var _jsxFileName = "C:\\dev\\nextjs\\ejabu-next-cv\\components\\tab\\roles.js";

var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;



function Card(_ref) {
  var title = _ref.title,
      subtitle = _ref.subtitle,
      year = _ref.year,
      detail = _ref.detail,
      tasks = _ref.tasks,
      children = _ref.children;
  return __jsx("div", {
    className: "jsx-1996594461" + " " + "text-gray-700 bg-gray-400 card-container",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 6,
      columnNumber: 5
    }
  }, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    id: "1996594461",
    __self: this
  }, ".card-container.jsx-1996594461{border-radius:4px;background:#f2f8ff;box-shadow:0 1px 0 0 rgba(0,0,0,0.1);border:1px solid #e4e7f0;}.header.jsx-1996594461{background:#fff;border-radius:4px 4px 0px 0px;padding:16px;}.subheader.jsx-1996594461{padding:16px;}.bio.jsx-1996594461{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.title.jsx-1996594461{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:start;-ms-flex-pack:start;justify-content:start;}.detail.jsx-1996594461{color:#385075;margin:8px 0 16px;display:block;overflow:hidden;}.subtitle.jsx-1996594461{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:start;-ms-flex-pack:start;justify-content:start;}.photo.jsx-1996594461{border-radius:50%;border:1px solid #f2f4f7;text-align:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=C:\\\\dev\\\\nextjs\\\\ejabu-next-cv\\\\components\\\\tab\\\\roles.js */"), __jsx("div", {
    className: "jsx-1996594461" + " " + "header",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 7
    }
  }, __jsx("div", {
    className: "jsx-1996594461" + " " + "bio",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "jsx-1996594461" + " " + "biox",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "jsx-1996594461" + " " + "card-title",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 13
    }
  }, title), __jsx("div", {
    className: "jsx-1996594461" + " " + "card-subtitle",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 13
    }
  }, subtitle)), __jsx("div", {
    className: "jsx-1996594461" + " " + "photo",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 11
    }
  }, year)), __jsx("div", {
    className: "jsx-1996594461" + " " + "detail",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 9
    }
  }, detail)), __jsx("div", {
    className: "jsx-1996594461" + " " + "subheader",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 7
    }
  }, children));
}

_c = Card;

function CardGrid(_ref2) {
  var children = _ref2.children,
      cols = _ref2.cols;
  if (!cols) cols = 2;
  return __jsx("div", {
    className: "jsx-2976567877" + " " + "grid grid-cols-1 lg:grid-cols-".concat(cols, " gap-4 card-grid"),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 5
    }
  }, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    id: "2976567877",
    __self: this
  }, ".container.jsx-2976567877{color:red;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxkZXZcXG5leHRqc1xcZWphYnUtbmV4dC1jdlxcY29tcG9uZW50c1xcdGFiXFxyb2xlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRVMsQUFHdUIsVUFDWiIsImZpbGUiOiJDOlxcZGV2XFxuZXh0anNcXGVqYWJ1LW5leHQtY3ZcXGNvbXBvbmVudHNcXHRhYlxccm9sZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBMYXlvdXRDb250ZW50IGZyb20gXCIuL2xheW91dC1jb250ZW50XCI7XG5cbmZ1bmN0aW9uIENhcmQoeyB0aXRsZSwgc3VidGl0bGUsIHllYXIsIGRldGFpbCwgdGFza3MsIGNoaWxkcmVuIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtZ3JheS03MDAgYmctZ3JheS00MDAgY2FyZC1jb250YWluZXJcIj5cbiAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgIHtgXG4gICAgICAgICAgLmNhcmQtY29udGFpbmVyIHtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmMmY4ZmY7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDFweCAwIDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U0ZTdmMDtcbiAgICAgICAgICB9XG4gICAgICAgICAgLmhlYWRlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4IDRweCAwcHggMHB4O1xuICAgICAgICAgICAgcGFkZGluZzogMTZweDtcbiAgICAgICAgICB9XG4gICAgICAgICAgLnN1YmhlYWRlciB7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNnB4O1xuICAgICAgICAgIH1cbiAgICAgICAgICAuYmlvIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgfVxuICAgICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzdGFydDtcbiAgICAgICAgICB9XG4gICAgICAgICAgLmRldGFpbCB7XG4gICAgICAgICAgICBjb2xvcjogIzM4NTA3NTtcbiAgICAgICAgICAgIG1hcmdpbjogOHB4IDAgMTZweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICB9XG4gICAgICAgICAgLnN1YnRpdGxlIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICAgICAgICAgIH1cbiAgICAgICAgICAucGhvdG8ge1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2YyZjRmNztcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICA8L3N0eWxlPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiaW9cIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJpb3hcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC10aXRsZVwiPnt0aXRsZX08L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1zdWJ0aXRsZVwiPntzdWJ0aXRsZX08L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBob3RvXCI+e3llYXJ9PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRldGFpbFwiPntkZXRhaWx9PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3ViaGVhZGVyXCI+e2NoaWxkcmVufTwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5mdW5jdGlvbiBDYXJkR3JpZCh7IGNoaWxkcmVuLCBjb2xzIH0pIHtcbiAgaWYgKCFjb2xzKSBjb2xzID0gMjtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17YGdyaWQgZ3JpZC1jb2xzLTEgbGc6Z3JpZC1jb2xzLSR7Y29sc30gZ2FwLTQgY2FyZC1ncmlkYH0+XG4gICAgICA8c3R5bGUganN4PlxuICAgICAgICB7YFxuICAgICAgICAgIC5jb250YWluZXIge1xuICAgICAgICAgICAgY29sb3I6IHJlZDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICA8L3N0eWxlPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvZGl2PlxuICApO1xufVxuXG5mdW5jdGlvbiBTY3JlZW4oKSB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxzdHlsZSBqc3g+e2BgfTwvc3R5bGU+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0b3J5XCI+XG4gICAgICAgIDxoMj5FbXBsb3ltZW50PC9oMj5cbiAgICAgICAgPGgzPjEuIFNlbmlvciBGdWxsLVN0YWNrIERldmVsb3BlcjwvaDM+XG4gICAgICAgIDxDYXJkR3JpZCBjb2xzPXsxfT5cbiAgICAgICAgICA8Q2FyZFxuICAgICAgICAgICAgdGl0bGU9XCJTZW5pb3IgRnVsbC1TdGFjayBEZXZlbG9wZXJcIlxuICAgICAgICAgICAgc3VidGl0bGU9XCJPdG9rbGl4XCJcbiAgICAgICAgICAgIHllYXI9XCIyMDIxXCJcbiAgICAgICAgICAgIGRldGFpbD17PD5BdXRvbW90aXZlIGFmdGVybWFya2V0IHN0YXJ0dXA8Lz59XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdWJoZWFkZXJcIj5cbiAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgIFRhc2tzXG4gICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICBCdWlsdCBhIGNvbXBsZXRlIG9ubGluZSBib29raW5nIHByb2Nlc3MgaW4gYSBXZWIgYXBwIGZyb21cbiAgICAgICAgICAgICAgICAgICAgICBzY3JhdGNoIHVzaW5nIE5leHRqcywgUmVhY3QgYW5kIFJlZHV4LlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgRGV2ZWxvcGVkIHByb2R1Y3QgZGlzY292ZXJ5IHNjcmVlbiB3aXRoIGR5bmFtaWMgZmlsdGVyc1xuICAgICAgICAgICAgICAgICAgICAgIHVzaW5nIFJlYWN0LlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgRGV2ZWxvcGVkIHJldXNhYmxlIFJlYWN0IGhvb2tzIGFuZCBjb21wb25lbnRzIGJ5IHV0aWxpemluZ1xuICAgICAgICAgICAgICAgICAgICAgIFN0b3J5Ym9vay5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIFJlZmFjdG9yZWQgY29tcGxleCBib29raW5nIHRpbWUgc3VnZ2VzdGlvbiBmdW5jdGlvbmFsaXR5XG4gICAgICAgICAgICAgICAgICAgICAgaW4gRGphbmdvXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICBUZWNoIFN0YWNrc1xuICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICA8bGk+UmVhY3QsIFJlZHV4LCBIb29rcywgRGphbmdvLCBNeVNRTDwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgIDwvQ2FyZEdyaWQ+XG4gICAgICAgIDxoMz4yLiBDb250cmFjdCBTb2Z0d2FyZSBEZXZlbG9wZXI8L2gzPlxuICAgICAgICA8Q2FyZEdyaWQ+XG4gICAgICAgICAgPENhcmRcbiAgICAgICAgICAgIHRpdGxlPVwiU2VuaW9yIEZ1bGwtU3RhY2sgRGV2ZWxvcGVyXCJcbiAgICAgICAgICAgIHN1YnRpdGxlPVwiVklTSVwiXG4gICAgICAgICAgICB5ZWFyPVwiMjAyMFwiXG4gICAgICAgICAgICBkZXRhaWw9e1xuICAgICAgICAgICAgICA8PkJ1aWx0IEVudGVycHJpc2UgRGFzaGJvYXJkIGFuZCBBdXRvbWF0ZWQgVHJ1Y2sgU2NoZWR1bGluZzwvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3ViaGVhZGVyXCI+XG4gICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICBUYXNrc1xuICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICA8bGk+RGV2ZWxvcCBOZXN0ZWQgVHJlZSBWaWV3IG9mIEVudGVycHJpc2UgRGFzaGJvYXJkPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPkV4cGxvcmUgaW50ZXJjb25uZWN0aW9uIHdpdGhpbiBPZG9vIG1vZHVsZXM8L2xpPlxuICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgSW1wYWN0XG4gICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICBJbXByb3ZlZCBBdXRvbWF0ZWQgVHJ1Y2sgU2NoZWR1bGluZyBhY2N1cmFjeSBieSA3MDAlXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICBSZWR1Y2VkIHJlbmRlciB0aW1lIG9mIE5lc3RlZCBUcmVlIFZpZXcgb2YgRW50ZXJwcmlzZVxuICAgICAgICAgICAgICAgICAgICAgIERhc2hib2FyZCBieSA0MDAlXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICAgPENhcmRcbiAgICAgICAgICAgIHRpdGxlPVwiSlMgYW5kIEZsdXR0ZXIgRGV2ZWxvcGVyXCJcbiAgICAgICAgICAgIHN1YnRpdGxlPVwiQXJrYW5hXCJcbiAgICAgICAgICAgIHllYXI9XCIyMDE5XCJcbiAgICAgICAgICAgIGRldGFpbD17PD5DdXN0b21pemVkIFBvaW50LW9mLVNhbGUgbW9kdWxlIHdpdGhpbiBPZG9vIDExPC8+fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3ViaGVhZGVyXCI+XG4gICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICBUYXNrc1xuICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgQnVpbHQgRmx1dHRlciBhcHAgdG8gbWFuYWdlIGVudGVycHJpc2Ugc2FsZXMgYW5kXG4gICAgICAgICAgICAgICAgICAgICAgcHVyY2hhc2luZyBhY3Rpdml0eVxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+Q3VzdG9taXplZCBKYXZhc2NyaXB0LXNpZGUgb2YgT2RvbzwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5CdWlsdCBwcm9kdWN0IHJldHVybiBwcm9jZXNzIGluIFBPUzwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICBTb2x2ZWQgZHVwbGljYXRlZCBvcmRlci1wcm9jZXNzaW5nIGJ5IGltcGxlbWVudGluZyBHVUlEXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICBJbXBhY3RcbiAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlNvbHV0aW9uIGRlbGl2ZXJlZCB0byA2MDAgcmV0YWlsIHNob3BzPC9saT5cbiAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICA8Q2FyZFxuICAgICAgICAgICAgdGl0bGU9XCJGbHV0dGVyIERldmVsb3BlclwiXG4gICAgICAgICAgICBzdWJ0aXRsZT1cIk1lZGNcIlxuICAgICAgICAgICAgeWVhcj1cIjIwMThcIlxuICAgICAgICAgICAgZGV0YWlsPXs8PkJ1aWx0IFBvaW50LW9mLVNhbGUgYXBwPC8+fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3ViaGVhZGVyXCI+XG4gICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICBUYXNrc1xuICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICA8bGk+TWFuYWdlZCBzdGF0ZXMgdXNpbmcgUmVkdXg8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+RGVzaWduZWQgb3JkZXIgcHJvY2VzcyB3aXRoaW4gbXVsdGlwbGU8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgU29sdmVkIGR1cGxpY2F0ZWQgb3JkZXItcHJvY2Vzc2luZyBieSBpbXBsZW1lbnRpbmcgR1VJRFxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgSW1wYWN0XG4gICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5Tb2x1dGlvbiBkZWxpdmVyZWQgdG8gNjAwIHJldGFpbCBzaG9wczwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L0NhcmQ+XG5cbiAgICAgICAgICA8Q2FyZFxuICAgICAgICAgICAgdGl0bGU9XCJTZW5pb3IgU29mdHdhcmUgRGV2ZWxvcGVyXCJcbiAgICAgICAgICAgIHN1YnRpdGxlPVwiRnVsbGVydG9uIEhlYWx0aCBJbmRvbmVzaWFcIlxuICAgICAgICAgICAgeWVhcj1cIjIwMTdcIlxuICAgICAgICAgICAgZGV0YWlsPXtcbiAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICBUZWNoLWxlYWQgaW4gNC1tZW1iZXIgdGVhbSwgdG8gZGV2ZWxvcCBpbnRlcm5hbCBIZWFsdGhcbiAgICAgICAgICAgICAgICBNYW5hZ2VtZW50IFN5c3RlbVxuICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN1YmhlYWRlclwiPlxuICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgVGFza3NcbiAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPkN1c3RvbWl6ZWQgUHl0aG9uLXNpZGUgb2YgT2RvbzwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5DdXN0b21pemVkIEphdmFzY3JpcHQtc2lkZSBvZiBPZG9vPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPkJ1aWx0IEhlYWx0aCBDaGVjayBwcm9jZXNzIGluIE9kb288L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+Q29ubmVjdGVkIE1lZGljaW5lIFRha2luZyBwcm9jZXNzIHRvIEJpbGxpbmc8L2xpPlxuICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgQWNoaWV2ZW1lbnRcbiAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlN1Y2NlZWQgYnVpbGRpbmcgcHJvdG90eXBlIHdpdGhpbiAyIG1vbnRoczwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgIDwvQ2FyZEdyaWQ+XG4gICAgICAgIDxoMz4zLiBGdWxsLVN0YWNrIERldmVsb3BlcjwvaDM+XG4gICAgICAgIDxDYXJkR3JpZCBjb2xzPXsxfT5cbiAgICAgICAgICA8Q2FyZFxuICAgICAgICAgICAgdGl0bGU9XCJGdWxsLVN0YWNrIERldmVsb3BlclwiXG4gICAgICAgICAgICBzdWJ0aXRsZT1cIk5vZGVmbHV4XCJcbiAgICAgICAgICAgIHllYXI9XCIyMDE2XCJcbiAgICAgICAgICAgIGRldGFpbD17PD5CaWctRGF0YSBhbmFseXRpY3MgUGxhdGZvcm08Lz59XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdWJoZWFkZXJcIj5cbiAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgIFRhc2tzXG4gICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICBCdWlsdCBhIGNvbXBsZXRlIG9ubGluZSBib29raW5nIHByb2Nlc3MgaW4gYSBXZWIgYXBwIGZyb21cbiAgICAgICAgICAgICAgICAgICAgICBzY3JhdGNoIHVzaW5nIE5leHRqcywgUmVhY3QgYW5kIFJlZHV4LlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgRGV2ZWxvcGVkIHByb2R1Y3QgZGlzY292ZXJ5IHNjcmVlbiB3aXRoIGR5bmFtaWMgZmlsdGVyc1xuICAgICAgICAgICAgICAgICAgICAgIHVzaW5nIFJlYWN0LlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgRGV2ZWxvcGVkIHJldXNhYmxlIFJlYWN0IGhvb2tzIGFuZCBjb21wb25lbnRzIGJ5IHV0aWxpemluZ1xuICAgICAgICAgICAgICAgICAgICAgIFN0b3J5Ym9vay5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIFJlZmFjdG9yZWQgY29tcGxleCBib29raW5nIHRpbWUgc3VnZ2VzdGlvbiBmdW5jdGlvbmFsaXR5XG4gICAgICAgICAgICAgICAgICAgICAgaW4gRGphbmdvXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICBUZWNoIFN0YWNrc1xuICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICA8bGk+UmVhY3QsIFJlZHV4LCBIb29rcywgRGphbmdvLCBNeVNRTDwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgIDwvQ2FyZEdyaWQ+XG4gICAgICAgIDxoMz40LiBTZW5pb3IgUHl0aG9uIERldmVsb3BlcjwvaDM+XG4gICAgICAgIDxDYXJkR3JpZCBjb2xzPXsxfT5cbiAgICAgICAgICA8Q2FyZFxuICAgICAgICAgICAgdGl0bGU9XCJTZW5pb3IgUHl0aG9uIERldmVsb3BlclwiXG4gICAgICAgICAgICBzdWJ0aXRsZT1cIlZJU0lcIlxuICAgICAgICAgICAgeWVhcj1cIjIwMTVcIlxuICAgICAgICAgICAgZGV0YWlsPXs8PkJpZy1EYXRhIGFuYWx5dGljcyBQbGF0Zm9ybTwvPn1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN1YmhlYWRlclwiPlxuICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgVGFza3NcbiAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIEJ1aWx0IGEgY29tcGxldGUgb25saW5lIGJvb2tpbmcgcHJvY2VzcyBpbiBhIFdlYiBhcHAgZnJvbVxuICAgICAgICAgICAgICAgICAgICAgIHNjcmF0Y2ggdXNpbmcgTmV4dGpzLCBSZWFjdCBhbmQgUmVkdXguXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICBEZXZlbG9wZWQgcHJvZHVjdCBkaXNjb3Zlcnkgc2NyZWVuIHdpdGggZHluYW1pYyBmaWx0ZXJzXG4gICAgICAgICAgICAgICAgICAgICAgdXNpbmcgUmVhY3QuXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICBEZXZlbG9wZWQgcmV1c2FibGUgUmVhY3QgaG9va3MgYW5kIGNvbXBvbmVudHMgYnkgdXRpbGl6aW5nXG4gICAgICAgICAgICAgICAgICAgICAgU3Rvcnlib29rLlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgUmVmYWN0b3JlZCBjb21wbGV4IGJvb2tpbmcgdGltZSBzdWdnZXN0aW9uIGZ1bmN0aW9uYWxpdHlcbiAgICAgICAgICAgICAgICAgICAgICBpbiBEamFuZ29cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgIFRlY2ggU3RhY2tzXG4gICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5SZWFjdCwgUmVkdXgsIEhvb2tzLCBEamFuZ28sIE15U1FMPC9saT5cbiAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgPC9DYXJkR3JpZD5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBTY3JlZW47XG4iXX0= */\n/*@ sourceURL=C:\\\\dev\\\\nextjs\\\\ejabu-next-cv\\\\components\\\\tab\\\\roles.js */"), children);
}

_c2 = CardGrid;

function Screen() {
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    id: "2085888330",
    __self: this
  }, "\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=C:\\\\dev\\\\nextjs\\\\ejabu-next-cv\\\\components\\\\tab\\\\roles.js */"), __jsx("div", {
    className: "jsx-2085888330" + " " + "story",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 7
    }
  }, __jsx("h2", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 9
    }
  }, "Employment"), __jsx("h3", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 9
    }
  }, "1. Senior Full-Stack Developer"), __jsx(CardGrid, {
    cols: 1,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 9
    }
  }, __jsx(Card, {
    title: "Senior Full-Stack Developer",
    subtitle: "Otoklix",
    year: "2021",
    detail: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, "Automotive aftermarket startup"),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "jsx-2085888330" + " " + "subheader",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 13
    }
  }, __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 17
    }
  }, "Tasks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 21
    }
  }, "Built a complete online booking process in a Web app from scratch using Nextjs, React and Redux."), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 21
    }
  }, "Developed product discovery screen with dynamic filters using React."), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 21
    }
  }, "Developed reusable React hooks and components by utilizing Storybook."), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 21
    }
  }, "Refactored complex booking time suggestion functionality in Django")))), __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 17
    }
  }, "Tech Stacks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 121,
      columnNumber: 21
    }
  }, "React, Redux, Hooks, Django, MySQL"))))))), __jsx("h3", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 9
    }
  }, "2. Contract Software Developer"), __jsx(CardGrid, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 129,
      columnNumber: 9
    }
  }, __jsx(Card, {
    title: "Senior Full-Stack Developer",
    subtitle: "VISI",
    year: "2020",
    detail: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, "Built Enterprise Dashboard and Automated Truck Scheduling"),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "jsx-2085888330" + " " + "subheader",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 13
    }
  }, __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 140,
      columnNumber: 17
    }
  }, "Tasks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 21
    }
  }, "Develop Nested Tree View of Enterprise Dashboard"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 21
    }
  }, "Explore interconnection within Odoo modules")))), __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 17
    }
  }, "Impact", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 21
    }
  }, "Improved Automated Truck Scheduling accuracy by 700%"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 21
    }
  }, "Reduced render time of Nested Tree View of Enterprise Dashboard by 400%")))))), __jsx(Card, {
    title: "JS and Flutter Developer",
    subtitle: "Arkana",
    year: "2019",
    detail: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, "Customized Point-of-Sale module within Odoo 11"),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 164,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "jsx-2085888330" + " " + "subheader",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 170,
      columnNumber: 13
    }
  }, __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 172,
      columnNumber: 17
    }
  }, "Tasks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 174,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 175,
      columnNumber: 21
    }
  }, "Built Flutter app to manage enterprise sales and purchasing activity"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 179,
      columnNumber: 21
    }
  }, "Customized Javascript-side of Odoo"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 180,
      columnNumber: 21
    }
  }, "Built product return process in POS"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 181,
      columnNumber: 21
    }
  }, "Solved duplicated order-processing by implementing GUID")))), __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 187,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 17
    }
  }, "Impact", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 190,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 191,
      columnNumber: 21
    }
  }, "Solution delivered to 600 retail shops")))))), __jsx(Card, {
    title: "Flutter Developer",
    subtitle: "Medc",
    year: "2018",
    detail: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, "Built Point-of-Sale app"),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 197,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "jsx-2085888330" + " " + "subheader",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 203,
      columnNumber: 13
    }
  }, __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 204,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 205,
      columnNumber: 17
    }
  }, "Tasks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 207,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 208,
      columnNumber: 21
    }
  }, "Managed states using Redux"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 209,
      columnNumber: 21
    }
  }, "Designed order process within multiple"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210,
      columnNumber: 21
    }
  }, "Solved duplicated order-processing by implementing GUID")))), __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 216,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 217,
      columnNumber: 17
    }
  }, "Impact", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 219,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 220,
      columnNumber: 21
    }
  }, "Solution delivered to 600 retail shops")))))), __jsx(Card, {
    title: "Senior Software Developer",
    subtitle: "Fullerton Health Indonesia",
    year: "2017",
    detail: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, "Tech-lead in 4-member team, to develop internal Health Management System"),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 227,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "jsx-2085888330" + " " + "subheader",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 238,
      columnNumber: 13
    }
  }, __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 239,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 240,
      columnNumber: 17
    }
  }, "Tasks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 242,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 243,
      columnNumber: 21
    }
  }, "Customized Python-side of Odoo"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 244,
      columnNumber: 21
    }
  }, "Customized Javascript-side of Odoo"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 245,
      columnNumber: 21
    }
  }, "Built Health Check process in Odoo"), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 246,
      columnNumber: 21
    }
  }, "Connected Medicine Taking process to Billing")))), __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 250,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 251,
      columnNumber: 17
    }
  }, "Achievement", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 253,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 254,
      columnNumber: 21
    }
  }, "Succeed building prototype within 2 months"))))))), __jsx("h3", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 261,
      columnNumber: 9
    }
  }, "3. Full-Stack Developer"), __jsx(CardGrid, {
    cols: 1,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 262,
      columnNumber: 9
    }
  }, __jsx(Card, {
    title: "Full-Stack Developer",
    subtitle: "Nodeflux",
    year: "2016",
    detail: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, "Big-Data analytics Platform"),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 263,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "jsx-2085888330" + " " + "subheader",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 269,
      columnNumber: 13
    }
  }, __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 270,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 271,
      columnNumber: 17
    }
  }, "Tasks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 273,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 274,
      columnNumber: 21
    }
  }, "Built a complete online booking process in a Web app from scratch using Nextjs, React and Redux."), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 278,
      columnNumber: 21
    }
  }, "Developed product discovery screen with dynamic filters using React."), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 282,
      columnNumber: 21
    }
  }, "Developed reusable React hooks and components by utilizing Storybook."), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 286,
      columnNumber: 21
    }
  }, "Refactored complex booking time suggestion functionality in Django")))), __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 293,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 294,
      columnNumber: 17
    }
  }, "Tech Stacks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 296,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 297,
      columnNumber: 21
    }
  }, "React, Redux, Hooks, Django, MySQL"))))))), __jsx("h3", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 304,
      columnNumber: 9
    }
  }, "4. Senior Python Developer"), __jsx(CardGrid, {
    cols: 1,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 305,
      columnNumber: 9
    }
  }, __jsx(Card, {
    title: "Senior Python Developer",
    subtitle: "VISI",
    year: "2015",
    detail: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, "Big-Data analytics Platform"),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 306,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "jsx-2085888330" + " " + "subheader",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 312,
      columnNumber: 13
    }
  }, __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 313,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 314,
      columnNumber: 17
    }
  }, "Tasks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 316,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 317,
      columnNumber: 21
    }
  }, "Built a complete online booking process in a Web app from scratch using Nextjs, React and Redux."), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 321,
      columnNumber: 21
    }
  }, "Developed product discovery screen with dynamic filters using React."), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 325,
      columnNumber: 21
    }
  }, "Developed reusable React hooks and components by utilizing Storybook."), __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 329,
      columnNumber: 21
    }
  }, "Refactored complex booking time suggestion functionality in Django")))), __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 336,
      columnNumber: 15
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 337,
      columnNumber: 17
    }
  }, "Tech Stacks", __jsx("ul", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 339,
      columnNumber: 19
    }
  }, __jsx("li", {
    className: "jsx-2085888330",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 340,
      columnNumber: 21
    }
  }, "React, Redux, Hooks, Django, MySQL")))))))));
}

_c3 = Screen;
/* harmony default export */ __webpack_exports__["default"] = (Screen);

var _c, _c2, _c3;

$RefreshReg$(_c, "Card");
$RefreshReg$(_c2, "CardGrid");
$RefreshReg$(_c3, "Screen");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,