{"componentChunkName":"component---src-templates-blog-js","path":"/python","result":{"data":{"mdx":{"frontmatter":{"title":"Python","date":"2019"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Python\",\n  \"date\": \"2019\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"projects\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#projects\",\n    \"aria-label\": \"projects permalink\",\n    \"className\": \"icon-heading-class before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Projects\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/bci/python-dev/python/truck\"\n  }), \"Automated Truck Scheduling\"), \" \", \"\\u2022\", \" 2019\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"python/.img/arch.png\",\n    \"alt\": \"Schedule Optimization System depicted as Blue Box\"\n  }))), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/bci/python-dev/python/truck/pandas\"\n  }), \"Pandas Dataframe\"), \" \", \"\\u2022\", \" 2019\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"python/truck/.img/sort1.png\",\n    \"alt\": \"Solved demand re-ordering using Pandas\"\n  }))), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/bci/python-dev/python/odoo\"\n  }), \"Odoo ERP Projects\"), \" \", \"\\u2022\", \" 2013 - 2020\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"python/.img/odoo1.png\",\n    \"alt\": \"Odoo ERP Implementation\"\n  }))), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/bci/python-dev/python/rest-api\"\n  }), \"Rest-API\"), \" \", \"\\u2022\", \" 2018, 2020\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \".img/mor3.png\",\n    \"alt\": \"Supply nested JSON to web client\"\n  }))), mdx(\"h2\", {\n    \"id\": \"library\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#library\",\n    \"aria-label\": \"library permalink\",\n    \"className\": \"icon-heading-class before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Library\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Odoo\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Has similiar ORM to Django\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"XlsxWriter\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Pandas\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Numpy\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Flask\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Django (completed some tutorial in 2015)\"))), mdx(\"h2\", {\n    \"id\": \"sample-code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#sample-code\",\n    \"aria-label\": \"sample code permalink\",\n    \"className\": \"icon-heading-class before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Sample Code\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"    @api.multi\\n    def bayar_tagihan(self):\\n        self.ensure_one()\\n        if self.total_amount > 0:\\n            if self.total_amount != self.total_biaya():\\n                text = \\\"Anda harus mengisi kolom Total Pembayaran secara Tepat sesuai dengan jumlah tagihan\\\"\\n                raise Warning(text)\\n            else:\\n                i = 0\\n                for biaya_id in self.biaya_ids:\\n                    i+=1\\n                    if biaya_id.state in [\\\"cancel\\\", \\\"paid\\\"] :\\n                        raise UserError(('Pembayaran %s pada baris %s sudah selesai karena berstatus %s') % (biaya_id.name, i, biaya_id.state) )\\n                    if biaya_id.partner_id != self.partner_id :\\n                        raise UserError(('Pembayaran %s pada baris %s seharusnya dilakukan oleh %s, bukan oleh %s') % (biaya_id.partner_id.name, i, biaya_id.name, self.partner_id.name) )\\n                today = fields.Datetime.now()\\n                doc_num_new = self.env['ir.sequence'].next_by_code('mahad.bayar')\\n                self.write({'state': 'paid', 'paid_date': today, 'doc_num': doc_num_new })\\n                for biaya_id in self.biaya_ids.sorted(key=lambda l: l.due_date):\\n                    biaya_id.check_kelunasan()\\n                    biaya_id.write({'state': 'paid', 'paid_date': today })\\n\\n\\n                self.paid_date = fields.Date.today()\\n                import datetime\\n                gmt = datetime.datetime.now()\\n                indo = gmt + datetime.timedelta(hours = 7)\\n                hour_now = indo.strftime(\\\"%H:%M\\\")\\n                self.paid_hour = hour_now\\n                return\\n        else:\\n            text = \\\"Anda harus mengisi kolom Total Pembayaran secara Manual\\\"\\n            raise Warning(text)\\n            return\\n\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#projects","title":"Projects"},{"url":"#library","title":"Library"},{"url":"#sample-code","title":"Sample Code"}]},"fields":{"dirname":"/home/haliib/dev/gatsby/rinkasan2/data/posts"}}},"pageContext":{"slug":"python","prev":{"title":"Django vs Odoo","link":"/django-vs-odoo"},"next":{"title":"Automated Truck Scheduling","link":"/python/truck"}}},"staticQueryHashes":["3159585216","4261541374"]}